# Fastfile for HomeInventory

default_platform(:ios)

platform :ios do
  # Helper lane to handle build number increment
  private_lane :ensure_build_number do
    # Get current build number
    current_build = get_build_number(xcodeproj: "HomeInventoryModular.xcodeproj").to_i
    
    # Ensure it's at least 2 (since build 1 exists)
    if current_build < 2
      increment_build_number(
        build_number: 2,
        xcodeproj: "HomeInventoryModular.xcodeproj"
      )
    end
  end

  desc "Build the app for development"
  lane :build_dev do
    ensure_build_number
    
    build_app(
      scheme: "HomeInventoryModular",
      configuration: "Debug",
      export_method: "development",
      output_directory: "./build",
      output_name: "HomeInventory_Dev"
    )
    
    UI.success("✅ Development build complete!")
  end

  desc "Build the app for TestFlight (without upload)"
  lane :build_only do
    ensure_build_number
    
    build_app(
      scheme: "HomeInventoryModular",
      configuration: "Release",
      export_method: "app-store",
      output_directory: "./build",
      output_name: "HomeInventory",
      clean: true,
      export_options: {
        signingStyle: "automatic",
        teamID: "2VXBQV4XC9"
      }
    )
    
    UI.success("✅ App built successfully! IPA available at ./build/HomeInventory.ipa")
  end

  desc "Build and upload to TestFlight using Xcode archive"
  lane :testflight_xcode do |options|
    # Skip git check if forced
    unless options[:force]
      ensure_git_status_clean
    end
    
    ensure_build_number
    
    # First, let's just build the archive
    build_app(
      scheme: "HomeInventoryModular",
      configuration: "Release",
      skip_archive: false,
      archive_path: "./build/HomeInventory.xcarchive",
      skip_package_ipa: true,
      clean: true
    )
    
    UI.success("✅ Archive created successfully!")
    
    # Now try to export and upload using xcodebuild
    sh("xcodebuild -exportArchive -archivePath ./build/HomeInventory.xcarchive -exportOptionsPlist ./ExportOptions.plist -exportPath ./build/")
    
    # Upload to TestFlight
    upload_to_testflight(
      ipa: "./build/HomeInventoryModular.ipa",
      app_identifier: "com.homeinventory.app",
      skip_waiting_for_build_processing: true,
      skip_submission: false,
      distribute_external: false,
      changelog: "🎉 Home Inventory v1.0.5 - Major Update!\n\n📱 ENHANCED iPAD EXPERIENCE\n• New sidebar navigation with split view support\n• Apple Pencil annotation support\n• Comprehensive keyboard shortcuts\n• Drag & drop functionality\n\n🔐 ADVANCED SECURITY\n• Two-factor authentication (2FA)\n• Private mode with biometric lock\n• Auto-lock with configurable timeout\n• AES-256 encrypted backups\n\n📊 POWERFUL ANALYTICS & REPORTS\n• PDF report generation for insurance\n• Category spending analysis\n• Depreciation tracking\n• Budget dashboard with limits\n\n💰 FINANCIAL FEATURES\n• Multi-currency support with real-time conversion\n• Insurance integration dashboard\n• Warranty management and reminders\n• Maintenance scheduling\n\n📧 GMAIL INTEGRATION\n• Automatic receipt import from Gmail\n• AI-powered receipt categorization\n• Bulk import capabilities\n• Smart email filtering\n\n🏠 FAMILY & COLLABORATION\n• Family sharing with permission controls\n• Collaborative inventory lists\n• Activity tracking and history\n• Multi-user support\n\n🔍 ADVANCED SEARCH\n• Natural language search\n• Voice search commands\n• Image similarity search\n• Smart filtering options\n\n☁️ SYNC & BACKUP\n• Multi-platform synchronization\n• Automatic cloud backups\n• Offline mode support\n• Smart conflict resolution\n\n⚡ PERFORMANCE IMPROVEMENTS\n• 40% faster app launch\n• 25% reduced memory usage\n• Enhanced battery efficiency\n• Improved network performance\n\n🎨 UI/UX ENHANCEMENTS\n• Full dark mode support\n• Enhanced accessibility\n• Smooth animations\n• Dynamic type support\n\n🐛 BUG FIXES & STABILITY\n• Fixed receipt import crashes\n• Resolved sync conflicts\n• Improved barcode scanner reliability\n• Better error handling\n\n🔒 PRIVACY & SECURITY\n• GDPR/CCPA compliant\n• Local biometric authentication\n• No third-party data sharing\n• Full encryption compliance\n\nTesting Instructions:\n• Test item management and barcode scanning\n• Try Gmail receipt import\n• Verify sync across devices\n• Test iPad-specific features\n• Check accessibility with VoiceOver\n\nFeedback: griffinradcliffe@gmail.com",
      beta_app_description: "Home Inventory - The most comprehensive personal inventory management app. Track belongings, manage warranties, generate insurance reports, and collaborate with family. Features advanced security, multi-currency support, Gmail integration, and powerful analytics. Perfect for insurance documentation, moving, and organization.",
      beta_app_feedback_email: "griffinradcliffe@gmail.com"
    )
    
    UI.success("✅ Successfully uploaded to TestFlight!")
  end

  desc "Build and upload to TestFlight"
  lane :testflight do |options|
    # Skip git check if forced
    unless options[:force]
      ensure_git_status_clean
    end
    
    ensure_build_number
    
    # Build the app - let Xcode handle provisioning
    build_app(
      scheme: "HomeInventoryModular",
      configuration: "Release", 
      export_method: "app-store",
      clean: true,
      xcargs: "-allowProvisioningUpdates"
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      app_identifier: "com.homeinventory.app",
      skip_waiting_for_build_processing: true,
      skip_submission: false,
      distribute_external: false,
      changelog: "🎉 Home Inventory v1.0.5 - Major Update!\n\n📱 ENHANCED iPAD EXPERIENCE\n• New sidebar navigation with split view support\n• Apple Pencil annotation support\n• Comprehensive keyboard shortcuts\n• Drag & drop functionality\n\n🔐 ADVANCED SECURITY\n• Two-factor authentication (2FA)\n• Private mode with biometric lock\n• Auto-lock with configurable timeout\n• AES-256 encrypted backups\n\n📊 POWERFUL ANALYTICS & REPORTS\n• PDF report generation for insurance\n• Category spending analysis\n• Depreciation tracking\n• Budget dashboard with limits\n\n💰 FINANCIAL FEATURES\n• Multi-currency support with real-time conversion\n• Insurance integration dashboard\n• Warranty management and reminders\n• Maintenance scheduling\n\n📧 GMAIL INTEGRATION\n• Automatic receipt import from Gmail\n• AI-powered receipt categorization\n• Bulk import capabilities\n• Smart email filtering\n\n🏠 FAMILY & COLLABORATION\n• Family sharing with permission controls\n• Collaborative inventory lists\n• Activity tracking and history\n• Multi-user support\n\n🔍 ADVANCED SEARCH\n• Natural language search\n• Voice search commands\n• Image similarity search\n• Smart filtering options\n\n☁️ SYNC & BACKUP\n• Multi-platform synchronization\n• Automatic cloud backups\n• Offline mode support\n• Smart conflict resolution\n\n⚡ PERFORMANCE IMPROVEMENTS\n• 40% faster app launch\n• 25% reduced memory usage\n• Enhanced battery efficiency\n• Improved network performance\n\n🎨 UI/UX ENHANCEMENTS\n• Full dark mode support\n• Enhanced accessibility\n• Smooth animations\n• Dynamic type support\n\n🐛 BUG FIXES & STABILITY\n• Fixed receipt import crashes\n• Resolved sync conflicts\n• Improved barcode scanner reliability\n• Better error handling\n\n🔒 PRIVACY & SECURITY\n• GDPR/CCPA compliant\n• Local biometric authentication\n• No third-party data sharing\n• Full encryption compliance\n\nTesting Instructions:\n• Test item management and barcode scanning\n• Try Gmail receipt import\n• Verify sync across devices\n• Test iPad-specific features\n• Check accessibility with VoiceOver\n\nFeedback: griffinradcliffe@gmail.com",
      beta_app_description: "Home Inventory - The most comprehensive personal inventory management app. Track belongings, manage warranties, generate insurance reports, and collaborate with family. Features advanced security, multi-currency support, Gmail integration, and powerful analytics. Perfect for insurance documentation, moving, and organization.",
      beta_app_feedback_email: "griffinradcliffe@gmail.com"
    )
    
    UI.success("✅ Successfully uploaded to TestFlight!")
    
    # Only commit if git was clean
    unless options[:force]
      commit_version_bump(
        message: "[skip ci] Bump build number for TestFlight",
        xcodeproj: "HomeInventoryModular.xcodeproj"
      )
      
      push_to_git_remote
    end
  end

  desc "Fix common build issues"
  lane :fix_build do
    # Clean build folder
    clean_build_artifacts
    
    # Clear derived data
    clear_derived_data
    
    # Resolve packages
    sh("xcodebuild -resolvePackageDependencies -scheme HomeInventoryModular -project ../HomeInventoryModular.xcodeproj")
    
    UI.success("✅ Build issues fixed! Try building again.")
  end

  desc "Resolve SPM dependencies"
  lane :resolve_dependencies do
    sh("xcodebuild -resolvePackageDependencies -workspace ../HomeInventoryModular.xcworkspace -scheme HomeInventoryModular")
    UI.success("✅ Dependencies resolved!")
  end


  desc "Validate the app before submission"
  lane :validate do
    # Build the app
    build_only
    
    # Validate with App Store Connect
    validate_app(
      ipa: "./build/HomeInventory.ipa",
      platform: "ios"
    )
    
    UI.success("✅ App validation passed!")
  end

  # Error handler
  error do |lane, exception, options|
    UI.error("❌ Error in lane #{lane}: #{exception.message}")
    
    if exception.message.include?("Code signing") || exception.message.include?("provisioning")
      UI.important("💡 Try running 'fastlane fix_build' to resolve common issues")
      UI.important("💡 You may need to open Xcode and ensure automatic signing is enabled")
    end
  end
end